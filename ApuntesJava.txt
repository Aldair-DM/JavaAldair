Escritura de Camel o Camello se refiere a que debemos de escribir siempre los nombres de
nuestras clases, donde siempre irán pegadas y la primer letra de cada palabra deberá de ir
en Mayúsculas.

Clase 1 Java para anotar la documentación del código lo que se debe de hacer es abrir con
2 parentesís los cuales nos darán la opción de hacer comentarios respecto a lo que estemos
haciendo dentro del código o también podemos usar el diagonal mas 2 asteriscos los cuales
sirven para algo similar pero generalmente para partes de temas dentro del ID separando asi
los temas o secciones del código 

*** //bla ó /**bla ***

Java si dferencía entre Mayúsculas y minúsculas.

1.0 CLASE HOLA MUNDO

Siempre que iniciamos con java lo que se va a generar dentro de la clase es el public class
adjunto al nombre de nuestra clase y sus llaves de apertura y cierre.

Para esta clase lo que haremos es utilizar la primer apertura que vayamos a ver en java
para poder trabajar con nuestro proyecto el cual es;

*** public static void main (String args[]){ ***

Donde la función main nos permite trabajar con nuestra parte del proyecto 

TODO DEBE ESCRIBIRSE RESPETANDO MAYUSCULAS Y MINUSCULAS.

Después veremos el significado de todas las palabras que componen tal enunciado

*** ESCRITURA ***

Para poder escribir en Java debemos de llamar una función que nos active la función de
escritura la cual nos permitirá escribir como imprimir funciones de tipo texto o string

*** System.out.println(); ***

La cual a manera de atajo se puede escribir como Sout dentro de la ID y con la tecla tabulador
podemos ahorrarnos escribir del todo la expresión o en otros ID de programación es mas simple
puesto que no es necesaria la tecla tabulador para conseguir el comando deseado.

Dentro de los parentesis del println vamos s escribir "entrecomilladas las cosas que queramos
imprimir en el compilador"

*** System.out.println("Hola mundo desde Java"); ***

Tarea 1: Saludar desde java

*** System.out.println("Hola, que tal"); *** (Probemos)
Tarea finalizada con éxito.


SECCIÓN 2 .8 VARIABLES EN JAVA

Una variable puede almacenar distintos tipos de datos asi como variar en sus valores
es decir que puede tener un valor diferente según haga falta

TIPOS DE DATOS EN JAVA:

TIPOS PRIMITIVOS:
-Tipos enteros o numerales
-Tipos string o cadena (texto)
-Tipos flotantes (decimales osea punto decimal)


TIPOS REFERENCIADOS:
-Clases
-Interfaces
-Arrays

VARIABLES PRIMITIVAS, TERMINOS Y ESTRUCTURAS:

Para definir un tipo de variable entera o de numeros se hace con el termino "int"
y al frente el nombre de la misma que debe encontrarse en formato camel o de camello
el cual se denota poniento la primer letra de la primer palabra en minuscula y el
inicio de la siguiente palabra en mayusculas, posteriormente lo que haremos es añadir
un signo de igual (=) junto con el valor que le vamos a asignar a dicha variable seguido
del punto y coma ;

EJEMPLO DE INT+NOMBRE:

int miVariableEntera = 10;

IMPRESIÓN DE VARIABLES:

Para imprimir una variable que ya hemos definido lo que debemos de hacer es de hacer
un SOUT y dentro de los parentesis del println() vamos a poner el nombre de la variable
que queremos que sea impresa.

*** sout.println(miVariableEntera); ***
Ejecutamos y ya ha funcionado la ejecución.

Como ya se ha definido esta variable podremos usarla a lo largo del programa
asi como cambiar el valor de dicha variable, osea que si después volvemos a
escribir la variable asignandole otro valor entonces esa variable previamente
definida fue redefinida y no hace falta especificar el tipo de variable que es "int
"
Documentemos también el programa.

Sin embargo una variable que ya fue usada dentro de un método no será posible usarla
en este caso usamos la variable "miVariableEntera" fue usada en main no puede ser usada
en otra.

TIPO DE DATO STRING:

String no es un dato primitivo sino una clase de java la cual nos permite crear
una variable de tipo texto, igualmente le asignamos un valor con un signo igual
y luego entre comillas vamos a poner aquello que queremos que sea escrito e impreso.

EJEMPLO STRING:

String miVariableCadena = "Saludos";

Tarea: ASIGNAR A ESA VARIABLE EL VALOR DE ADIOS E IMPRIMIR.

Usando el comando control+click sobre una variable nos llevará a la línea donde
esta fue creada.

Si alguna ventana fue cerrada podemos darle en el apartado window y sobre eso buscar la consola
pero en Intelligi no hace falta ya que generalmente está abajo.

CLASE VAR

VAR= Inferencia de tipo de dato en java osea que según el valor que le asignemos,
sea string o int o float va a ser mas sencillo de usar las variables puesto que no
tendríamos que definirlas según su tipo

ATAJO NUEVO: Cuando queramos imprimir el valor de la variable junto con el nombre de
la misma lo que haremos será usar el comando soutv+tabulador o en intelligi vamos
a seleccionar la opción únicamente escribiendo ese atajo y se desplegará el menu de opciones

